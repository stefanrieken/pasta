# define the sprite struct
enum "xpos" "ypos" "width" "height" "map0" "map1" "tileset" "flags" "colors0" "colors1"

# Current flags:
# - Scale y (bits 7-6)
# - Scale x (bits 5-4)
# - Transparency (bits 3-0, on / off for each color index)

# returns sprite struct n
define "sprite" {
    args "n";
    + (* 12 1024) (* n 16)
}

# Load base ascii / spritesets into memory (may be builtin)
#load_bitmap "assets/ascii1.bmp" (tileset 0)
#load_bitmap "assets/ascii2.bmp" (tileset 1)

# Define text screen / background sprite
define "screen_spr" (sprite 0)
define "screen" (* 30 1024) # Location of screen data
setallb screen_spr 0 0 32 32 (lsb screen) (msb screen) 1 0x00 0x10 0x30 # set scale=1x; default color scheme

# Place palette (and display registers?) after 16 sprite regs (for somewhere to go)
define "palette" (sprite 16)

define "colour" {
    args "n" "r" "g" "b";
    setallb (+ palette (* n 4)) b g r; # Carrying over quirks from bitmap format
}

# 16 color palette
# The first 4 colors override those loaded in with the bitmaps
colour  0 0x19 0x0a 0x24 # Black
colour  1 0xff 0xff 0xfa # White
colour  2 0x9b 0xae 0xb5 # Grey
colour  3 0xff 0xc8 0x52 # Yellow

colour  4 0xf8 0x8d 0x35 # Orange
colour  5 0xd0 0x95 0x5d # Brown
colour  6 0x74 0x19 0x02 # Crimson
colour  7 0xca 0x48 0x3f # Red

colour  8 0xff 0xad 0x9e # Pink
colour  9 0x5c 0x43 0x7a # Indigo
colour 10 0xf6 0xd6 0xff # Lavender
colour 11 0xd3 0xda 0xfd # Sky

colour 12 0x34 0x3b 0x98 # Navy
colour 13 0x16 0x4b 0x17 # Forest
colour 14 0xaa 0xc1 0x81 # Fern
colour 15 0x69 0x7e 0x02 # Olive

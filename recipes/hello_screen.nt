# Assumes lib.trico is loaded

define "cursor" (write screen "\x7FTricolore\n\n")
add "cursor" 1;
set "cursor" (write cursor "Hello, world!\n")
# Do a few bricks
add "cursor" 1; # leave a hole
loop {
    # set "cursor" (write cursor "\x1f"); # equivalent
    setb cursor 31;
    set "cursor" (+ 1 cursor);
    ! (= (% cursor 32) 0)
}


# Add a sprite
define "sprite1" (sprite 1)
define "tile1" (* 31 1024)
setallb sprite1 112 0 1 1 (lsb tile1) (msb tile1) 0 0x01 0x10 0x30 # set scale = 2x on both axes + set first color to be transparent
setb tile1 21

draw;

#bitfield "north" "east" "south" "west";

define "pxtouches" {
    args "x" "y";
    set "x" (% x 256);
    set "y" (% y 256);
    # if y = 8-15, tile num should be 8; if 16-23, 16; if 24-31, 24
    # if x = 8-15, tile num should be +1
    define "tile" (+ (* (/ y 8) 32) (/ x 8));
    define "map" (| (<< (getb screen_spr map1) 8) (getb screen_spr map0));
    getb map tile
};

define "catwalk" {
    define "diffx"  0;
    define "diffy"  0;

    loop {
        # X pos
        if (& direction 0b1100) {
            # Accelerate
            add "diffx" (- (>> direction 2) 2);
            # Maximize speed
            if (= diffx 0x0020) { set "diffx" 0x001F};
            if (= diffx 0xFFE0) { set "diffx" 0xFFF0}
        } {
            # Decelerate
            if (>= diffx 0x7FFF) { # = negative value
                add "diffx" 1
            } { if (> diffx 0) {
                sub "diffx" 1
            }};
        };

        # Y pos
        if (& direction 0b0011) {
            # Accelerate
            if (& direction 0b10) {
                add "diffy" 1 # Down
            } {
                # print diffy;
                if (&& (= diffy 0) (||
                    (pxtouches    (getb sprite1 xpos)    (+ (getb sprite1 ypos) 8))
                    (pxtouches (+ (getb sprite1 xpos) 7) (+ (getb sprite1 ypos) 8))
                ) ) {
                    set "diffy" 0xFFF6; # Jump start
                } {
                    add "diffy" 1 # Gravitate
                }
            }
        } {
            # No arrow keys active

            add "diffy" 1; # Gravitate
        };

        # Maximize speed
        if (= diffy 0x0020) { set "diffy" 0x001F};
        if (= diffy 0xFFE0) { set "diffy" 0xFFF0};

        # Correct overshooting of Y
        if (< diffy 0x7FFF) { # South
            loop { && (> diffy 0) (||
                (pxtouches (+ (getb sprite1 xpos) 0) (+ (getb sprite1 ypos) (/ diffy 4) 7))
                (pxtouches (+ (getb sprite1 xpos) 7) (+ (getb sprite1 ypos) (/ diffy 4) 7))
            ) } {
                sub "diffy" 4
            }
        } { # North
            loop { && (> diffy 0) (||
                (pxtouches (+ (getb sprite1 xpos) 0) (+ (getb sprite1 ypos) (/ diffy 4)))
                (pxtouches (+ (getb sprite1 xpos) 7) (+ (getb sprite1 ypos) (/ diffy 4)))
            ) } {
                add "diffy" 4
            }
        };

        # Correct overshooting of X
        if (< diffx 0x7FFF) { # East
            loop { && (> diffx 0) (||
                (pxtouches (+ (getb sprite1 xpos) (/ diffx 4) 7) (+ (getb sprite1 ypos) (/ diffy 4)))
                (pxtouches (+ (getb sprite1 xpos) (/ diffx 4) 7) (+ (getb sprite1 ypos) (/ diffy 4) 7))
            ) } {
                sub "diffx" 4
            }
        } { # West
            loop { && (> diffx 0) (||
                (pxtouches (+ (getb sprite1 xpos) (/ diffx 4)) (+ (getb sprite1 ypos) (/ diffy 4)))
                (pxtouches (+ (getb sprite1 xpos) (/ diffx 4)) (+ (getb sprite1 ypos) (/ diffy 4) 7))
            ) } {
                add "diffx" 4
            }
        };

        if (| (/ diffy 4) (/ diffx 4)) {
            setb sprite1 ypos (+ (getb sprite1 ypos) (/ diffy 4));
            setb sprite1 xpos (+ (getb sprite1 xpos) (/ diffx 4));
            draw
        };

        catchup;
        return true
    }
}

catwalk
